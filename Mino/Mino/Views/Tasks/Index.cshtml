@using Mino.Models
@model IEnumerable<Mino.Models.Tasks>
@{
    ViewBag.Title = "Index";
}
<ul class="tasks">
    @foreach (var task in Model)
    {
        <li>
            <div class="task-box js-task-box" data-task-id="@task.Id" data-project-id="@task.ProjectId" data-tag-id="@task.TagId" data-priority="@task.Priority"
                 @if (task.DateTime != null) { @: data-date="@task.DateTime.Value.ToString("d MMM yyyy")"
                                                                                                                           @: data-time="@task.DateTime.Value.ToString("HH:mm")"
                                                                                                                       }>
                <div class="task-tick">
                    <a href="#">
                        <i class="glyphicon glyphicon-unchecked"></i>
                    </a>
                </div>
                <div class="task-name">
                    @task.Name
                </div>
                <div class="task-attributes">
                    <div class="attr-section">
                        <span class="glyphicon glyphicon-record" style="color: #234;" aria-hidden="true"></span>
                        <span>
                            @if (task.ProjectId != null)
                            {
                                @task.Project.Name
                            }
                            else
                            {
                                @:Inbox
                            }
                        </span>
                    </div>
                    <div class="attr-section">
                        @if (task.TagId != null)
                        {
                            <span class="glyphicon glyphicon-flag"></span>
                            <span>@task.Tag.Name</span>
                        }
                    </div>
                    <div class="attr-section">
                        <span class="glyphicon glyphicon-pushpin"></span>
                        <span>
                            @{
                                var priority = (Tasks.Priorities)task.Priority;
                                var priorityName = priority.ToString();
                            }
                            @priorityName
                        </span>
                    </div>
                </div>
            </div>
        </li>
                                }
</ul>







@section scripts
{
    <script>
        $(document).ready(function () {
            var taskId = $('#Task_Id');
            $('.js-task-box').on('click',
                function () {//start
                    var inAnimateClass = 'animated bounceIn';

                    $('.js-sidebar-content').toggleClass('hidden');
                    var editTaskContent = $('.js-edit-task-content');
                    if (editTaskContent.hasClass('hidden')) {
                        editTaskContent.toggleClass(inAnimateClass)
                            .toggleClass('hidden');

                        $('.js-edit-task-name').val($(this).find('.task-name').text().trim());
                        $('.js-edit-dropdown-projects').val($(this).attr('data-project-id'));
                        $('.js-edit-dropdown-tags').val($(this).attr('data-tag-id'));
                        $('.js-edit-dropdown-priority').val($(this).attr('data-priority'));
                        $('.js-edit-date').val($(this).attr('data-date'));
                        $('.js-edit-time').val($(this).attr('data-time'));
                        taskId.val($(this).attr('data-task-id'));
                    } else {
                        editTaskContent.toggleClass(inAnimateClass);
                        editTaskContent.toggleClass('hidden');
                    }
                });

            $('.js-edit-task').on('click',
                function () {
                    $.post("/api/tasks/update",
                        {
                            name: $('.js-edit-task-name').val(),
                            taskId: taskId.val(),
                            projectId: $('.js-edit-dropdown-projects').val(),
                            tagId: $('.js-edit-dropdown-tags').val(),
                            date: $('.js-edit-date').val(),
                            time: $('.js-edit-time').val(),
                            priority: $('.js-edit-dropdown-priority').val()
                        })
                        .done(function () {
                            location.reload();
                        })
                        .fail(function () {
                            alert('Something failed!');
                        });
                });

            $('.js-delete-task').on('click',
                function () {
                    $.ajax({
                        url: '/api/tasks/delete',
                        method: 'DELETE',
                        data: 'taskId=' + taskId.val()
                        

                    })
                    .done(function () {
                        location.reload();
                    })
                    .fail(function () {
                        alert('Something failed!');

                    });
                });
        });
    </script>
}

